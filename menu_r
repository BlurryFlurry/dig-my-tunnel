#!/usr/bin/env bash
# only run as root
if [[ $EUID -gt 0 ]]; then
  echo "Please run as root"
  exit
fi

ptb_service_user=$(cat "$HOME"/.config/ptb-service-user)

# Set Github repository details
GITHUB_USER="BlurryFlurry"
REPO_NAME="tg-vps-manager"
LOCAL_REPO_DIR="/home/$ptb_service_user/bot"
# Go to the local directory
cd "$LOCAL_REPO_DIR" || exit


touch "$HOME"/.config/ptb-service-version.txt
# Get the latest tag from Github
LATEST_TAG=$(git ls-remote --tags "https://github.com/$GITHUB_USER/$REPO_NAME.git" | awk '{print $2}' | grep -v '{}' | sort -V | tail -n1 | sed 's|refs/tags/||')

# set new update flag
if [ ! -f "$HOME/.config/ptb-service-version.txt" ] || [ "$(cat version.txt)" != "$LATEST_TAG" ]; then
 new_update_flag=" | New update: ${LATEST_TAG}"
fi

start_telegram_bot() {
  if systemctl is-active --quiet ptb@"$ptb_service_user".service; then
    echo "Telegram bot is running, Are you sure you want to stop it? [y/n]"
    read -r choice
    case $choice in
      y|Y) sudo systemctl stop ptb@"$ptb_service_user".service;;
      *) echo "Aborted."; return;;
    esac
  else
    echo "Starting Telegram bot..."
    sudo systemctl start ptb@"$ptb_service_user".service
  fi
}

update_telegram_bot() {

  # Check if the latest tag is different from the one stored in the local directory
  if [ ! -f "$HOME/.config/ptb-service-version.txt" ] || [ "$(cat version.txt)" != "$LATEST_TAG" ]; then

    # Pull the latest tag to the local repository
    sudo -u $ptb_service_user git pull --tags "https://github.com/$GITHUB_USER/$REPO_NAME.git" "$LATEST_TAG"
    chown $ptb_service_user:$ptb_service_user -R .

    # Store the latest tag in a file in the local directory
    echo "$LATEST_TAG" > "$HOME/.config/ptb-service-version.txt"
    username=$ptb_service_user
    curl -sSL https://raw.githubusercontent.com/BlurryFlurry/dropbear_squid_stunnel_nodejs_proxy_badvpn_install/main/perm_fixer.sh | sh -s -- $username

  fi

}


create_ssh_user() {
  read -p "Username: " username
  read -p "Password: " password

  # Set default values for max_sessions and days
  default_max_sessions=5
  default_days=30

  read -p "Maximum concurrent SSH sessions [default: $default_max_sessions]: " max_sessions
  max_sessions=${max_sessions:-$default_max_sessions}

  read -p "How many days you need this account from today [default: $default_days]: " days
  days=${days:-$default_days}

  useradd -M -s /usr/sbin/nologin -e $(date -d "+$days days" +%Y-%m-%d) "$username"
  echo "$username:$password" | chpasswd

  # Add limit for maximum concurrent SSH sessions
  echo "$username hard maxlogins $max_sessions" | sudo tee -a /etc/security/limits.conf > /dev/null
}

show_menu() {

  while true; do
  ptb_status=$(systemctl is-active ptb@"$ptb_service_user".service)
  ptb_action="Start"
  if [ "$ptb_status" = "active" ]; then
    ptb_action="Stop"
  fi
  clear
  echo "----------------------------------"
  echo "              MENU                "
  echo "----------------------------------"
  echo "1. $ptb_action Telegram bot"
  echo "2. Update Telegram bot${new_update_flag}"
  echo "3. Create SSH User"
  echo "4. Exit"
  echo "----------------------------------"
  echo "Enter a number:"
  read -r choice
    case $choice in
      1) start_telegram_bot;;
      2) update_telegram_bot;;
      3) create_ssh_user;;
      4) break;;
      *) echo "Invalid option, please choose again.";;
    esac
  done
}

show_menu
